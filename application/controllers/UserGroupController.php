<?php


class UserGroupController extends LSMainController
{
    public function accessRules()
    {
        return array(
            array(
                'allow',
                'actions' => array(),
                'users' => array('*'), //everybody
            ),
            array(
                'allow',
                'actions' => array('index'),
                'users' => array('@'), //only login users
            ),
            array('deny'),
        );
    }

    /**
     * this is part of _renderWrappedTemplate implement in old usergroups.php
     *
     * @param string $view
     * @return bool
     */
    public function beforeRender($view)
    {
        App()->getClientScript()->registerPackage('jquery-tablesorter');
        App()->getClientScript()->registerScriptFile(App()->getConfig('adminscripts') . 'users.js');

        Yii::app()->loadHelper('database');

        if (isset($this->aData['ugid'])) {
            $userGroup = UserGroup::model()->findByPk($this->aData['ugid']);
            $uid = Yii::app()->user->id;
            if ($userGroup && $userGroup->hasUser($uid)) {
                $this->aData['userGroup'] = $userGroup;
            } else {
                $this->aData['userGroup'] = null;
            }
        }

        $this->aData['imageurl'] = Yii::app()->getConfig("adminimageurl");

        if (isset($aData['usergroupbar']['closebutton']['url'])) {
            $sAlternativeUrl = $this->aData['usergroupbar']['closebutton']['url'];
            $aData['usergroupbar']['closebutton']['url'] = Yii::app()->request->getUrlReferrer(Yii::app()->createUrl($sAlternativeUrl));
        }

        $this->aData['menubar_pathname'] = '/admin/usergroup/usergroupbar_view';

        return parent::beforeRender($view); // TODO: Change the autogenerated stub
    }

    /**
     * Load main usergroup screen, showing all existing usergroups in a gridview.
     *
     * @return array
     */
    public function actionIndex()
    {
        if (!Permission::model()->hasGlobalPermission('usergroups', 'read')) {
            Yii::app()->session['flashmessage'] = gT('Access denied!');
            $this->redirect(App()->createUrl("/admin"));
        }

        $aData = [];

        //todo REFACTORING if we want to
        if (Yii::app()->session['loginID']) {

            $model = UserGroup::model();
        }

        $aData['usergroupbar']['returnbutton']['url'] = 'admin/index';
        $aData['usergroupbar']['returnbutton']['text'] = gT('Return to admin home');

        if (isset($_GET['pageSize'])) {
            Yii::app()->user->setState('pageSize', (int)$_GET['pageSize']);
        }

        $pageSize = Yii::app()->user->getState('pageSize', Yii::app()->params['defaultPageSize']);

        $this->aData = $aData;

        /** todo reimplemet it ...it's still used in sending email view ...
        if (!empty($header)) {
            return array($aViewUrls, $aData);
        } else {
            $this->render('usergroups_view', [
                'model' => $model,
                'pagesize' => $pageSize
            ]);
        }
         * */
        $this->render('usergroups_view', [
            'model' => $model,
            'pagesize' => $pageSize
        ]);
    }

    public function actionViewGroup($ugid, $headerCfg)
    {
        if (!Permission::model()->hasGlobalPermission('usergroups', 'read')) {
            Yii::app()->session['flashmessage'] = gT('Access denied!');
            $this->redirect(App()->createUrl("/admin"));
        }

        if (!empty($header)) {
            $aData['headercfg'] = $header;
        } else {
            $aData = array();
        }

        if ($ugid != false) {
            $ugid = (int)$ugid;
        } else {
            $sFlashType = 'error';
            $sFlashMessage = gT('GroupId missing');
            Yii::app()->user->setFlash($sFlashType, $sFlashMessage);
            $this->redirect('index');
        }

        $aData['ugid'] = $ugid;
        if (Yii::app()->session['loginID']) {
            $aData["usergroupid"] = $ugid;
            $result = UserGroup::model()->requestViewGroup($ugid, Yii::app()->session["loginID"]);
            $crow = $result[0];
            if ($result) {
                $aData["groupfound"] = true;
                $aData["groupname"] = $crow['name'];
                if (!empty($crow['description'])) {
                    $aData["usergroupdescription"] = $crow['description'];
                } else {
                    $aData["usergroupdescription"] = "";
                }
            }

            $aUserInGroupsResult = UserGroup::model()->findByPk($ugid);

            $row = 1;
            $userloop = array();
            $bgcc = "oddrow";
            foreach ($aUserInGroupsResult->users as $oUser) {
                // @todo: Move the zebra striping to view
                if ($bgcc == "evenrow") {
                    $bgcc = "oddrow";
                } else {
                    $bgcc = "evenrow";
                }
                $userloop[$row]["userid"] = $oUser->uid;

                //	output users
                $userloop[$row]["rowclass"] = $bgcc;
                if (Permission::model()->hasGlobalPermission('usergroups', 'update') && $oUser->parent_id == Yii::app()->session['loginID']) {
                    $userloop[$row]["displayactions"] = true;
                } else {
                    $userloop[$row]["displayactions"] = false;
                }

                $userloop[$row]["username"] = $oUser->users_name;
                $userloop[$row]["email"] = $oUser->email;

                $row++;
            }
            $aData["userloop"] = $userloop;


            $aSearchCriteria = new CDbCriteria();
            $aSearchCriteria->compare("ugid", $ugid);
            if (!Permission::model()->hasGlobalPermission('superadmin', 'read')) {
                $aSearchCriteria->compare("owner_id", Yii::app()->session['loginID']);
            }
            $aFilteredUserGroups = UserGroup::model()->count($aSearchCriteria);

            if ($aFilteredUserGroups > 0) {
                $aData["useradddialog"] = true;

                $aUsers = User::model()->findAll(['join' => "LEFT JOIN (SELECT uid AS id FROM {{user_in_groups}} WHERE ugid = {$ugid}) AS b ON t.uid = b.id", 'condition' => "id IS NULL"]);
                $aNewUserListData = CHtml::listData($aUsers, 'uid', function ($user) {
                    return \CHtml::encode($user->users_name) . " (" . \CHtml::encode($user->full_name) . ')';
                });
                // Remove group owner because an owner is automatically member of a group
                unset($aNewUserListData[$aUserInGroupsResult->owner_id]);
                $aData["addableUsers"] = array('-1' => gT("Please choose...")) + $aNewUserListData;
                $aData["useraddurl"] = "";
            }
        }

        $aData['usergroupbar']['edit'] = true;
        $aData['usergroupbar']['closebutton']['url'] = Yii::app()->createUrl('userGroup/index'); // Close button

        if (!empty($header)) {
            return array($aViewUrls, $aData);
        } else {
            $this->render('viewUserGroup_view', [
                'aData' => $aData
            ]);
        }
    }
}
