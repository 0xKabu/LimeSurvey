{"version":3,"sources":["webpack:///src/helperComponents/SaveLabelSet.vue","webpack:///./src/helperComponents/SaveLabelSet.vue?bf6c","webpack:///./src/helperComponents/SaveLabelSet.vue","webpack:///./src/helperComponents/SaveLabelSet.vue?8fb4","webpack:///./src/helperComponents/SaveLabelSet.vue?dcbd","webpack:///./src/mixins/abstractSubquestionAndAnswers.js"],"names":["components","QuickEdit","SimplePopUpEditor","LabelSets","props","readonly","type","Boolean","default","methods","getLength","arrayOrObject","isArrayLike","length","isObjectLike","keys","getNewTitleFromCurrent","scaleId","nonNumericPart","baseNonNumericPart","currentDataSet","title","code","replace","numericPart","reduce","prev","oDataSet","max","$log","log","getRandomId","Math","random","toString","substr","deleteThisDataSet","tmpArray","merge","remove","oDataSetIterator","uniqueSelector","duplicateThisDataSet","newDataSet","push","addDataSet","Array","getTemplate","openLabelSets","$modal","show","template","typedef","typeDefininition","typekey","typeDefininitionKey","width","height","scrollable","resizable","openQuickAdd","current","openPopUpEditor","dataSetObject","target","typeDef","typeDefKey","event","payload","save","$store","state","activeLanguage","value","switchinput","newTarget","$event","$","focus","replaceFromQuickAdd","contents","$options","name","tempObject","foreach","scaleObject","scale","lngSet","key","newDataSetBlock","dataSetValue","lngKey","addToFromQuickAdd","replaceFromLabelSets","data","dataSet","addToFromLabelSets","i","saveAsLabelSet","SaveLabelSet","editFromSimplePopupEditor","tempFullObject","identifier","findIndex","scale_id"],"mappings":";;;;;;;;;;;;;;;;;;;AAEA;AACA;AAEA;AAEA;AACA,wBADA;AAEA,mEAFA;AAGA;AACA;AAAA;AAAA;AAAA,KADA;AAEA;AAAA;AAAA;AAAA,KAFA;AAGA;AAAA;AAAA;AAAA,KAHA;AAIA;AAAA;AAAA;AAAA,KAJA;AAKA;AAAA;AAAA;AAAA;AALA,GAHA;AAUA,MAVA,kBAUA;AACA;AACA;AADA;AAIA,GAfA;AAgBA;AACA,WADA,qBACA;AAAA;;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA,OAPA;AAQA;AACA,kCADA;AAEA,6BAFA;AAGA;AAHA;AAKA,kDACA;AAAA;AAAA,OADA,EAEA;AAAA;AAAA,OAFA;AAIA;AAxBA;AAhBA,G;;;;;;;;;;;;ACPA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA,oBAAoB,qCAAqC;AACzD,eAAe,+BAA+B;AAC9C,gBAAgB,6BAA6B;AAC7C;AACA;AACA;AACA,eAAe,4BAA4B;AAC3C,iBAAiB,iCAAiC;AAClD,mBAAmB,qBAAqB;AACxC,qBAAqB,4BAA4B;AACjD,yBAAyB,SAAS,4BAA4B,EAAE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,eAAe;AACrC,yBAAyB,uBAAuB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,eAAe,uCAAuC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACzEA;AAAA;AAAA;AAAA;AAA2F;AAC3B;AACL;;;AAG3D;AAC0F;AAC1F,gBAAgB,2GAAU;AAC1B,EAAE,kFAAM;AACR,EAAE,uFAAM;AACR,EAAE,gGAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEA;AACA,IAAI,IAAU;AACd,YAAY,mBAAO,CAAC,wGAAkI;AACtJ,cAAc,mBAAO,CAAC,+CAAK;AAC3B;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,sBAAsB,iIAAmD,EAAE;AAAA;AAC3E;AACA,gBAAgB,uFAAM;AACtB,yBAAyB,gGAAe;AACxC,OAAO;AACP,KAAK;AACL;AACA;AACA;AACe,gF;;;;;;;;;;;;ACtCf;AAAA;AAAA,wCAAyR,CAAgB,6UAAG,EAAC,C;;;;;;;;;;;;ACA7S;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEe;AACXA,YAAU,EAAE;AAACC,aAAS,EAATA,wEAAD;AAAYC,qBAAiB,EAAjBA,gFAAZ;AAA+BC,aAAS,EAATA,wEAASA;AAAxC,GADD;AAEXC,OAAK,EAAE;AACHC,YAAQ,EAAG;AAACC,UAAI,EAAEC,OAAP;AAAgBC,aAAO,EAAE;AAAzB;AADR,GAFI;AAKXC,SAAO,EAAE;AACLC,aADK,qBACKC,aADL,EACoB;AACrB,UAAGC,0DAAW,CAACD,aAAD,CAAd,EAA+B;AAC3B,eAAOA,aAAa,CAACE,MAArB;AACH;;AACD,UAAGC,2DAAY,CAACH,aAAD,CAAf,EAAgC;AAC5B,eAAOI,kDAAI,CAACJ,aAAD,CAAJ,CAAoBE,MAA3B;AACH;;AACD,aAAO,CAAP;AACH,KATI;AAULG,0BAVK,kCAUkBC,OAVlB,EAU2B;AAC5B,UAAIC,cAAc,GAAG,KAAKC,kBAA1B;;AACA,UAAG,KAAKT,SAAL,CAAe,KAAKU,cAAL,CAAoBH,OAApB,CAAf,IAA+C,CAAlD,EAAqD;AACjDC,sBAAc,GAAG,CAAC,KAAKE,cAAL,CAAoBH,OAApB,EAA6B,CAA7B,EAAgCI,KAAhC,IAAyC,KAAKD,cAAL,CAAoBH,OAApB,EAA6B,CAA7B,EAAgCK,IAA1E,EAAgFC,OAAhF,CAAwF,QAAxF,EAAiG,EAAjG,CAAjB;AACH;;AACD,UAAIC,WAAW,GAAGC,oDAAM,CAAC,KAAKL,cAAL,CAAoBH,OAApB,CAAD,EAA8B,UAACS,IAAD,EAAOC,QAAP,EAAoB;AACtE,eAAOC,iDAAG,CAAC,CAACF,IAAD,EAAO,oKAAS,CAACC,QAAQ,CAACN,KAAT,IAAkBM,QAAQ,CAACL,IAA5B,EAAoCC,OAApC,CAA4C,SAA5C,EAAsD,EAAtD,CAAT,CAAP,CAAD,CAAV;AACH,OAFuB,EAErB,CAFqB,CAAN,GAEV,CAFR;AAGA,WAAKM,IAAL,CAAUC,GAAV,CAAc,UAAd,EAA0B;AAACZ,sBAAc,EAAdA,cAAD;AAAiBM,mBAAW,EAAXA;AAAjB,OAA1B;AACA,aAAON,cAAc,GAAC,EAAf,GAAkBM,WAAzB;AACH,KApBI;AAqBLO,eArBK,yBAqBQ;AACT,aAAO,WAASC,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,MAA3B,CAAkC,CAAlC,EAAqC,CAArC,CAAhB;AACH,KAvBI;AAwBLC,qBAxBK,6BAwBaT,QAxBb,EAwBuBV,OAxBvB,EAwBgC;AAAA;;AACjC,UAAIoB,QAAQ,GAAGC,mDAAK,CAAC,EAAD,EAAK,KAAKlB,cAAV,CAApB;AACAiB,cAAQ,CAACpB,OAAD,CAAR,GAAoBsB,oDAAM,CAACF,QAAQ,CAACpB,OAAD,CAAT,EAAoB,UAACuB,gBAAD;AAAA,eAAsBA,gBAAgB,CAAC,KAAI,CAACC,cAAN,CAAhB,IAAyCd,QAAQ,CAAC,KAAI,CAACc,cAAN,CAAvE;AAAA,OAApB,CAA1B;AACA,WAAKrB,cAAL,GAAsBiB,QAAtB;AACH,KA5BI;AA6BLK,wBA7BK,gCA6BgBf,QA7BhB,EA6B0BV,OA7B1B,EA6BmC;AACpC,UAAIoB,QAAQ,GAAGC,mDAAK,CAAC,EAAD,EAAK,KAAKlB,cAAV,CAApB;AACA,UAAIuB,UAAU,GAAGL,mDAAK,CAAC,EAAD,EAAKX,QAAL,CAAtB;AACAgB,gBAAU,CAAC,KAAKF,cAAN,CAAV,GAAkC,KAAKV,WAAL,EAAlC;AACAM,cAAQ,CAACpB,OAAD,CAAR,CAAkB2B,IAAlB,CAAuBD,UAAvB;AACA,WAAKvB,cAAL,GAAsBiB,QAAtB;AACH,KAnCI;AAoCLQ,cApCK,sBAoCM5B,OApCN,EAoCe;AAChB,UAAIoB,QAAQ,GAAGC,mDAAK,CAAC,EAAD,EAAK,KAAKlB,cAAV,CAApB;AACAiB,cAAQ,CAACpB,OAAD,CAAR,GAAoBoB,QAAQ,CAACpB,OAAD,CAAR,IAAqB,IAAI6B,KAAJ,EAAzC;AACAT,cAAQ,CAACpB,OAAD,CAAR,CAAkB2B,IAAlB,CAAuB,KAAKG,WAAL,CAAiB9B,OAAjB,CAAvB;AACA,WAAKG,cAAL,GAAsBiB,QAAtB;AACH,KAzCI;AA0CLW,iBA1CK,yBA0CS/B,OA1CT,EA0CkB;AACnB,WAAKgC,MAAL,CAAYC,IAAZ,CAAiB/C,wEAAjB,EAA4B;AACxBc,eAAO,EAAPA,OADwB;AAExBkC,gBAAQ,EAAE,KAAKJ,WAAL,CAAiB9B,OAAjB,CAFc;AAGxBX,YAAI,EAAG,KAAKA,IAHY;AAIxB8C,eAAO,EAAG,KAAKC,gBAJS;AAKxBC,eAAO,EAAG,KAAKC;AALS,OAA5B,EAMK;AACDC,aAAK,EAAE,KADN;AAEDC,cAAM,EAAE,KAFP;AAGDC,kBAAU,EAAE,IAHX;AAIDC,iBAAS,EAAE;AAJV,OANL;AAaH,KAxDI;AAyDLC,gBAzDK,0BAyDU;AACX,WAAKX,MAAL,CAAYC,IAAZ,CAAiBjD,wEAAjB,EAA4B;AACxB4D,eAAO,EAAG,KAAKzC,cADS;AAExBd,YAAI,EAAG,KAAKA,IAFY;AAGxB8C,eAAO,EAAG,KAAKC,gBAHS;AAIxBC,eAAO,EAAG,KAAKC;AAJS,OAA5B,EAKK;AACDC,aAAK,EAAE,KADN;AAEDC,cAAM,EAAE,KAFP;AAGDC,kBAAU,EAAE,IAHX;AAIDC,iBAAS,EAAE;AAJV,OALL;AAYH,KAtEI;AAuELG,mBAvEK,2BAuEWC,aAvEX,EAuE0B9C,OAvE1B,EAuEmC;AAAA;;AACpC,WAAKgC,MAAL,CAAYC,IAAZ,CACIhD,gFADJ,EAEI;AACI8D,cAAM,EAAE,KAAK1D,IADjB;AAEIyD,qBAAa,EAAEA,aAFnB;AAGIE,eAAO,EAAE,KAAKZ,gBAHlB;AAIIa,kBAAU,EAAE,KAAKX;AAJrB,OAFJ,EAQI;AACIC,aAAK,EAAE,KADX;AAEIC,cAAM,EAAE,KAFZ;AAGIC,kBAAU,EAAE,IAHhB;AAIIC,iBAAS,EAAE;AAJf,OARJ,EAcI;AACI,kBAAU,gBAACQ,KAAD,EAAQC,OAAR,EAAoB;AAC1B,gBAAI,CAACvC,IAAL,CAAUC,GAAV,CAAc,cAAd,EAA8BqC,KAA9B,EAAqCC,OAArC;;AACA,cAAGD,KAAK,CAACE,IAAN,IAAc,IAAjB,EAAuB;AACnBN,yBAAa,CAAC,MAAI,CAACO,MAAL,CAAYC,KAAZ,CAAkBC,cAAnB,CAAb,CAAgD,MAAI,CAACnB,gBAArD,IAAyEc,KAAK,CAACM,KAA/E;AACH;AACJ,SANL;AAOI,kBAAU,gBAACN,KAAD,EAAQC,OAAR,EAAoB;AAC1B,gBAAI,CAACvC,IAAL,CAAUC,GAAV,CAAc,iBAAd,EAAiCqC,KAAjC,EAAwCC,OAAxC;;AACA,cAAGD,KAAK,CAACE,IAAN,IAAc,IAAjB,EAAuB;AACnBN,yBAAa,CAAC,MAAI,CAACO,MAAL,CAAYC,KAAZ,CAAkBC,cAAnB,CAAb,CAAgD,MAAI,CAACnB,gBAArD,IAAyEc,KAAK,CAACM,KAA/E;AACH;AACJ;AAZL,OAdJ;AA6BH,KArGI;AAsGLC,eAtGK,uBAsGOC,SAtGP,EAsGiC;AAAA,UAAfC,MAAe,uEAAN,IAAM;;AAClC,UAAGD,SAAS,IAAI,KAAhB,EAAuB;AACnB,aAAK9C,IAAL,CAAUC,GAAV,CAAc8C,MAAd;AACA;AACH;;AACDC,OAAC,CAAC,MAAIF,SAAL,CAAD,CAAiBG,KAAjB;AACH,KA5GI;AA6GLC,uBA7GK,+BA6GeC,QA7Gf,EA6GwB;AAAA;;AACzB,WAAKnD,IAAL,CAAUC,GAAV,CAAc,uCAAqC,KAAKmD,QAAL,CAAcC,IAAjE,EAAuEF,QAAvE;AACA,UAAIG,UAAU,GAAG7C,mDAAK,CAAC,EAAD,EAAK,KAAKlB,cAAV,CAAtB;AACAgE,2DAAO,CAACJ,QAAD,EAAW,UAACK,WAAD,EAAcC,KAAd,EAAwB;AACtCH,kBAAU,CAACG,KAAD,CAAV,GAAoB,EAApB;AACAF,6DAAO,CAACC,WAAD,EAAc,UAACE,MAAD,EAASC,GAAT,EAAiB;AAClC,cAAMC,eAAe,GAAG,MAAI,CAAC1C,WAAL,CAAiBuC,KAAjB,CAAxB;;AACAG,yBAAe,CAAC,MAAI,CAAClC,mBAAN,CAAf,GAA4CiC,GAA5C;AACAJ,+DAAO,CAACG,MAAD,EAAS,UAACG,YAAD,EAAeC,MAAf,EAA0B;AACtCF,2BAAe,CAACE,MAAD,CAAf,CAAwB,MAAI,CAACtC,gBAA7B,IAAiDqC,YAAjD;AACH,WAFM,CAAP;AAGAP,oBAAU,CAACG,KAAD,CAAV,CAAkB1C,IAAlB,CAAuB6C,eAAvB;AACH,SAPM,CAAP;AAQH,OAVM,CAAP;AAWA,WAAKrE,cAAL,GAAsB+D,UAAtB;AACH,KA5HI;AA6HLS,qBA7HK,6BA6HaZ,QA7Hb,EA6HsB;AAAA;;AACvB,WAAKnD,IAAL,CAAUC,GAAV,CAAc,qCAAmC,KAAKmD,QAAL,CAAcC,IAA/D,EAAqEF,QAArE;AACA,UAAIG,UAAU,GAAG7C,mDAAK,CAAC,EAAD,EAAK,KAAKlB,cAAV,CAAtB;AACAgE,2DAAO,CAACJ,QAAD,EAAW,UAACK,WAAD,EAAcC,KAAd,EAAwB;AACtCF,6DAAO,CAACC,WAAD,EAAc,UAACE,MAAD,EAASC,GAAT,EAAiB;AAClC,cAAMC,eAAe,GAAG,MAAI,CAAC1C,WAAL,CAAiBuC,KAAjB,CAAxB;;AACAG,yBAAe,CAAC,MAAI,CAAClC,mBAAN,CAAf,GAA4CiC,GAA5C;AACAJ,+DAAO,CAACG,MAAD,EAAS,UAACG,YAAD,EAAeC,MAAf,EAA0B;AACtCF,2BAAe,CAACE,MAAD,CAAf,CAAwB,MAAI,CAACtC,gBAA7B,IAAiDqC,YAAjD;AACH,WAFM,CAAP;AAGAP,oBAAU,CAACG,KAAD,CAAV,CAAkB1C,IAAlB,CAAuB6C,eAAvB;AACH,SAPM,CAAP;AAQH,OATM,CAAP;AAUA,WAAKrE,cAAL,GAAsB+D,UAAtB;AACH,KA3II;AA4ILU,wBA5IK,gCA4IgBb,QA5IhB,EA4IyB;AAAA;;AAC1B,WAAKnD,IAAL,CAAUC,GAAV,CAAc,uCAAqC,KAAKmD,QAAL,CAAcC,IAAjE,EAAuEF,QAAvE;AACA,UAAIG,UAAU,GAAG7C,mDAAK,CAAC,EAAD,EAAK,KAAKlB,cAAV,CAAtB;AACA+D,gBAAU,CAACH,QAAQ,CAAC/D,OAAV,CAAV,GAA+B,EAA/B;AACAmE,2DAAO,CAACJ,QAAQ,CAACc,IAAV,EAAgB,UAACC,OAAD,EAAa;AAChCA,eAAO,CAAC,MAAI,CAACtD,cAAN,CAAP,GAA+B,MAAI,CAACV,WAAL,EAA/B;AACAoD,kBAAU,CAACH,QAAQ,CAAC/D,OAAV,CAAV,CAA6B2B,IAA7B,CAAkCmD,OAAlC;AACH,OAHM,CAAP;AAIA,WAAK3E,cAAL,GAAsB+D,UAAtB;AACH,KArJI;AAsJLa,sBAtJK,8BAsJchB,QAtJd,EAsJuB;AAAA;;AACxB,WAAKnD,IAAL,CAAUC,GAAV,CAAc,qCAAmC,KAAKmD,QAAL,CAAcC,IAA/D,EAAqEF,QAArE;AACA,UAAIG,UAAU,GAAG7C,mDAAK,CAAC,EAAD,EAAK,KAAKlB,cAAV,CAAtB;AACAgE,2DAAO,CAACJ,QAAQ,CAACc,IAAV,EAAgB,UAACC,OAAD,EAAUE,CAAV,EAAgB;AACnCF,eAAO,CAAC,MAAI,CAACtD,cAAN,CAAP,GAA+B,MAAI,CAACV,WAAL,EAA/B;AACAoD,kBAAU,CAACH,QAAQ,CAAC/D,OAAV,CAAV,CAA6B2B,IAA7B,CAAkCmD,OAAlC;AACH,OAHM,CAAP;AAIA,WAAK3E,cAAL,GAAsB+D,UAAtB;AACH,KA9JI;AA+JLe,kBA/JK,0BA+JUjF,OA/JV,EA+JmB;AACpB,UAAM8E,OAAO,GAAGzD,mDAAK,CAAC,EAAD,EAAK,KAAKlB,cAAL,CAAoBH,OAApB,CAAL,CAArB;AACA,WAAKgC,MAAL,CAAYC,IAAZ,CACIiD,2EADJ,EAEI;AACInC,cAAM,EAAE,KAAK1D,IADjB;AAEIW,eAAO,EAAPA,OAFJ;AAGI8E,eAAO,EAAPA,OAHJ;AAII9B,eAAO,EAAE,KAAKZ,gBAJlB;AAKIa,kBAAU,EAAE,KAAKX;AALrB,OAFJ,EASI;AACIC,aAAK,EAAE,KADX;AAEIC,cAAM,EAAE,KAFZ;AAGIC,kBAAU,EAAE,IAHhB;AAIIC,iBAAS,EAAE;AAJf,OATJ;AAgBH,KAjLI;AAkLLyC,6BAlLK,qCAkLqBpB,QAlLrB,EAkL8B;AAAA;;AAC/B,WAAKnD,IAAL,CAAUC,GAAV,CAAc,iCAAd,EAAiDkD,QAAjD;AACA,UAAMqB,cAAc,GAAG/D,mDAAK,CAAC,EAAD,EAAK,KAAKlB,cAAV,CAA5B;AACA,UAAIkF,UAAU,GAAGC,wDAAS,CAACF,cAAc,CAACrB,QAAQ,CAACwB,QAAV,CAAf,EAAoC,UAACzC,aAAD,EAAekC,CAAf;AAAA,eAC9DlC,aAAa,CAAC,MAAI,CAACR,mBAAN,CAAb,KAA4CyB,QAAQ,CAAC,MAAI,CAACzB,mBAAN,CADU;AAAA,OAApC,CAA1B;AAGA8C,oBAAc,CAACrB,QAAQ,CAACwB,QAAV,CAAd,CAAkCF,UAAlC,IAAgDtB,QAAhD;AACA,WAAKnD,IAAL,CAAUC,GAAV,CAAc,wCAAd,EAAwD;AAACwE,kBAAU,EAAVA,UAAD;AAAaD,sBAAc,EAAdA;AAAb,OAAxD;AACA,WAAKjF,cAAL,GAAsBiF,cAAtB;AACH;AA3LI;AALE,CAAf,E","file":"main.54ea9378918221476bfe.hot-update.js","sourcesContent":["\r\n<script>\r\nimport keys from 'lodash/keys';\r\nimport foreach from 'lodash/foreach';\r\n\r\nimport AjaxMixin from '../mixins/runAjax';\r\n\r\nexport default {\r\n    name: 'SaveAsLabelSet',\r\n    mixins: [AjaxMixin],\r\n    props: {\r\n        dataSet: {type: Object, required: true},\r\n        scaleId: {type: Number, required: true},\r\n        type: {type: String, required: true},\r\n        typedef: {type: String, required: true},\r\n        typekey: {type: String, required: true},\r\n    },\r\n    data() {\r\n        return {\r\n            labelName: '',\r\n\r\n        }\r\n    },\r\n    methods: {\r\n        confirm() {\r\n            const dataSetTosend = merge({}, this.dataSet);\r\n    \r\n            delete dataSetTosend[this.typekey];\r\n            dataSetTosend.code = this.dataSet[this.typekey];\r\n\r\n            foreach(this.$store.state.languages, (language, lngKey) => {\r\n\r\n                let tmpLangObj = merge({}, this.dataSet[lngKey]);\r\n                tmpLangObj.title = tmpLangObj[this.typedef];\r\n                delete tmpLangObj[this.typedef];\r\n                dataSetTosend[lngKey] = tmpLangObj;\r\n\r\n            });\r\n            const payload = {\r\n                label_name: this.labelName,\r\n                labels: dataSetTosend,\r\n                languages: keys(this.$store.state.languages).join(' ')\r\n            }\r\n            this.$store.dispatch('saveAsLabelSet', ).then(\r\n                (result) => { LS.LsGlobalNotifier.create(result.message, result.classes) },\r\n                error => {this.$log.error(error);}\r\n            );\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<template>\r\n    <div class=\"panel panel-default\">\r\n        <div class=\"panel-heading\">\r\n            <h3 class=\"panel-title\">{{'Save as labelset' | translate}}</h3>\r\n        </div>\r\n        <div class=\"panel-body\">\r\n            <div class=\"container-fluid\">\r\n                <div class=\"row\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"exampleInputEmail1\">{{ \"Name for label set\" | translate}}</label>\r\n                        <input type=\"text\" class=\"form-control\" v-model=\"labelName\">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"panel-body text-right\">\r\n            <button @click.prevent=\"confirm\" class=\"btn btn-success\">{{ 'Confirm' | translate }}</button>\r\n            <button @click.prevent=\"$emit('close')\" class=\"btn btn-error\">{{\"Cancel\" | translate }}</button>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<style>\r\n\r\n</style>\r\n","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"panel panel-default\" }, [\n    _c(\"div\", { staticClass: \"panel-heading\" }, [\n      _c(\"h3\", { staticClass: \"panel-title\" }, [\n        _vm._v(_vm._s(_vm._f(\"translate\")(\"Save as labelset\")))\n      ])\n    ]),\n    _c(\"div\", { staticClass: \"panel-body\" }, [\n      _c(\"div\", { staticClass: \"container-fluid\" }, [\n        _c(\"div\", { staticClass: \"row\" }, [\n          _c(\"div\", { staticClass: \"form-group\" }, [\n            _c(\"label\", { attrs: { for: \"exampleInputEmail1\" } }, [\n              _vm._v(_vm._s(_vm._f(\"translate\")(\"Name for label set\")))\n            ]),\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.labelName,\n                  expression: \"labelName\"\n                }\n              ],\n              staticClass: \"form-control\",\n              attrs: { type: \"text\" },\n              domProps: { value: _vm.labelName },\n              on: {\n                input: function($event) {\n                  if ($event.target.composing) {\n                    return\n                  }\n                  _vm.labelName = $event.target.value\n                }\n              }\n            })\n          ])\n        ])\n      ])\n    ]),\n    _c(\"div\", { staticClass: \"panel-body text-right\" }, [\n      _c(\n        \"button\",\n        {\n          staticClass: \"btn btn-success\",\n          on: {\n            click: function($event) {\n              $event.preventDefault()\n              return _vm.confirm($event)\n            }\n          }\n        },\n        [_vm._v(_vm._s(_vm._f(\"translate\")(\"Confirm\")))]\n      ),\n      _c(\n        \"button\",\n        {\n          staticClass: \"btn btn-error\",\n          on: {\n            click: function($event) {\n              $event.preventDefault()\n              return _vm.$emit(\"close\")\n            }\n          }\n        },\n        [_vm._v(_vm._s(_vm._f(\"translate\")(\"Cancel\")))]\n      )\n    ])\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./SaveLabelSet.vue?vue&type=template&id=128d384d&\"\nimport script from \"./SaveLabelSet.vue?vue&type=script&lang=js&\"\nexport * from \"./SaveLabelSet.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\Developement\\\\LimeSurveyDevelop\\\\webroot\\\\assets\\\\packages\\\\questioneditor\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!module.hot.data) {\n      api.createRecord('128d384d', component.options)\n    } else {\n      api.reload('128d384d', component.options)\n    }\n    module.hot.accept(\"./SaveLabelSet.vue?vue&type=template&id=128d384d&\", function () {\n      api.rerender('128d384d', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/helperComponents/SaveLabelSet.vue\"\nexport default component.exports","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SaveLabelSet.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SaveLabelSet.vue?vue&type=script&lang=js&\"","export * from \"-!cache-loader?{\\\"cacheDirectory\\\":\\\"node_modules/.cache/vue-loader\\\",\\\"cacheIdentifier\\\":\\\"7d09658b-vue-loader-template\\\"}!../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SaveLabelSet.vue?vue&type=template&id=128d384d&\"","import max from 'lodash/max';\nimport keys from 'lodash/keys';\nimport merge from 'lodash/merge';\nimport remove from 'lodash/remove';\nimport reduce from 'lodash/reduce';\nimport foreach from 'lodash/forEach';\nimport findIndex from 'lodash/findIndex';\nimport isArrayLike from 'lodash/isArrayLike';\nimport isObjectLike from 'lodash/isObjectLike';\n\nimport QuickEdit from '../helperComponents/QuickEdit.vue';\nimport LabelSets from '../helperComponents/LabelSets.vue';\nimport SaveLabelSet from '../helperComponents/SaveLabelSet.vue';\nimport SimplePopUpEditor from '../helperComponents/SimplePopUpEditor.vue';\n\nexport default {\n    components: {QuickEdit, SimplePopUpEditor, LabelSets},\n    props: {\n        readonly : {type: Boolean, default: false}\n    },\n    methods: {\n        getLength(arrayOrObject) {\n            if(isArrayLike(arrayOrObject)) {\n                return arrayOrObject.length;\n            }\n            if(isObjectLike(arrayOrObject)) {\n                return keys(arrayOrObject).length;\n            }\n            return 0;\n        },\n        getNewTitleFromCurrent(scaleId) {\n            let nonNumericPart = this.baseNonNumericPart;\n            if(this.getLength(this.currentDataSet[scaleId]) > 0) {\n                nonNumericPart = (this.currentDataSet[scaleId][0].title || this.currentDataSet[scaleId][0].code).replace(/[0-9]/g,'');\n            }\n            let numericPart = reduce(this.currentDataSet[scaleId],(prev, oDataSet) => {\n                return max([prev, parseInt((oDataSet.title || oDataSet.code  ).replace(/[^0-9]/g,''))]);\n            }, 0) + 1 ;\n            this.$log.log('NewTitle', {nonNumericPart, numericPart});\n            return nonNumericPart+''+numericPart;\n        },\n        getRandomId(){\n            return 'random'+Math.random().toString(36).substr(2, 7);\n        },\n        deleteThisDataSet(oDataSet, scaleId) {\n            let tmpArray = merge([], this.currentDataSet);\n            tmpArray[scaleId] = remove(tmpArray[scaleId], (oDataSetIterator) => oDataSetIterator[this.uniqueSelector] != oDataSet[this.uniqueSelector]);\n            this.currentDataSet = tmpArray;\n        },\n        duplicateThisDataSet(oDataSet, scaleId) {\n            let tmpArray = merge([], this.currentDataSet);\n            let newDataSet = merge({}, oDataSet);\n            newDataSet[this.uniqueSelector] = this.getRandomId();\n            tmpArray[scaleId].push(newDataSet);\n            this.currentDataSet = tmpArray;\n        },\n        addDataSet(scaleId) {\n            let tmpArray = merge([], this.currentDataSet);\n            tmpArray[scaleId] = tmpArray[scaleId] || new Array();\n            tmpArray[scaleId].push(this.getTemplate(scaleId));\n            this.currentDataSet = tmpArray;\n        },\n        openLabelSets(scaleId) {\n            this.$modal.show(LabelSets, {\n                scaleId,\n                template: this.getTemplate(scaleId),\n                type : this.type,\n                typedef : this.typeDefininition,\n                typekey : this.typeDefininitionKey\n              }, {\n                width: '75%',\n                height: '75%',\n                scrollable: true,\n                resizable: true\n              }\n            )\n        },\n        openQuickAdd() {\n            this.$modal.show(QuickEdit, {\n                current : this.currentDataSet,\n                type : this.type,\n                typedef : this.typeDefininition,\n                typekey : this.typeDefininitionKey\n              }, {\n                width: '75%',\n                height: '75%',\n                scrollable: true,\n                resizable: true\n              }\n            )\n        },\n        openPopUpEditor(dataSetObject, scaleId) {\n            this.$modal.show(\n                SimplePopUpEditor, \n                { \n                    target: this.type,\n                    dataSetObject: dataSetObject,\n                    typeDef: this.typeDefininition,\n                    typeDefKey: this.typeDefininitionKey\n                },\n                {\n                    width: '75%',\n                    height: '75%',\n                    scrollable: true,\n                    resizable: true\n                },\n                {\n                    'closed': (event, payload) => { \n                        this.$log.log('MODAL CLOSED', event, payload);\n                        if(event.save == true) {\n                            dataSetObject[this.$store.state.activeLanguage][this.typeDefininition] = event.value;\n                        }\n                    },\n                    'change': (event, payload) => { \n                        this.$log.log('CHANGE IN MODAL', event, payload);\n                        if(event.save == true) {\n                            dataSetObject[this.$store.state.activeLanguage][this.typeDefininition] = event.value;\n                        }\n                    }\n                }\n            )\n        },\n        switchinput(newTarget, $event = null) {\n            if(newTarget == false) {\n                this.$log.log($event);\n                return;\n            }\n            $('#'+newTarget).focus();\n        }, \n        replaceFromQuickAdd(contents){\n            this.$log.log('replaceFromQuickAdd triggered on: '+this.$options.name, contents);\n            let tempObject = merge({}, this.currentDataSet);\n            foreach(contents, (scaleObject, scale) => {\n                tempObject[scale] = [];\n                foreach(scaleObject, (lngSet, key) => {\n                    const newDataSetBlock = this.getTemplate(scale);\n                    newDataSetBlock[this.typeDefininitionKey] = key;\n                    foreach(lngSet, (dataSetValue, lngKey) => { \n                        newDataSetBlock[lngKey][this.typeDefininition] = dataSetValue; \n                    });\n                    tempObject[scale].push(newDataSetBlock);\n                });\n            });\n            this.currentDataSet = tempObject;\n        },\n        addToFromQuickAdd(contents){\n            this.$log.log('addToFromQuickAdd triggered on: '+this.$options.name, contents);\n            let tempObject = merge({}, this.currentDataSet);\n            foreach(contents, (scaleObject, scale) => {\n                foreach(scaleObject, (lngSet, key) => {\n                    const newDataSetBlock = this.getTemplate(scale);\n                    newDataSetBlock[this.typeDefininitionKey] = key;\n                    foreach(lngSet, (dataSetValue, lngKey) => { \n                        newDataSetBlock[lngKey][this.typeDefininition] = dataSetValue; \n                    });\n                    tempObject[scale].push(newDataSetBlock);\n                });\n            });\n            this.currentDataSet = tempObject;\n        },\n        replaceFromLabelSets(contents){\n            this.$log.log('replaceFromQuickAdd triggered on: '+this.$options.name, contents);\n            let tempObject = merge({}, this.currentDataSet);\n            tempObject[contents.scaleId] = [];\n            foreach(contents.data, (dataSet) => { \n                dataSet[this.uniqueSelector] = this.getRandomId();\n                tempObject[contents.scaleId].push(dataSet) \n            });\n            this.currentDataSet = tempObject;\n        },\n        addToFromLabelSets(contents){\n            this.$log.log('addToFromQuickAdd triggered on: '+this.$options.name, contents);\n            let tempObject = merge({}, this.currentDataSet);\n            foreach(contents.data, (dataSet, i) => { \n                dataSet[this.uniqueSelector] = this.getRandomId();\n                tempObject[contents.scaleId].push(dataSet) \n            })\n            this.currentDataSet = tempObject;\n        },\n        saveAsLabelSet(scaleId) {\n            const dataSet = merge({}, this.currentDataSet[scaleId]);\n            this.$modal.show(\n                SaveLabelSet, \n                { \n                    target: this.type,\n                    scaleId,\n                    dataSet,\n                    typeDef: this.typeDefininition,\n                    typeDefKey: this.typeDefininitionKey\n                },\n                {\n                    width: '75%',\n                    height: '75%',\n                    scrollable: true,\n                    resizable: true\n                }\n            )\n        },\n        editFromSimplePopupEditor(contents){\n            this.$log.log('Event editFromSimplePopupEditor', contents);\n            const tempFullObject = merge({}, this.currentDataSet);\n            let identifier = findIndex(tempFullObject[contents.scale_id], (dataSetObject,i) => \n            dataSetObject[this.typeDefininitionKey] === contents[this.typeDefininitionKey] \n            );\n            tempFullObject[contents.scale_id][identifier] = contents;\n            this.$log.log('Event editFromSimplePopupEditor result', {identifier, tempFullObject});\n            this.currentDataSet = tempFullObject;\n        }\n    }\n}"],"sourceRoot":""}