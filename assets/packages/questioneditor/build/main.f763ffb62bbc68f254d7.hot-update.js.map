{"version":3,"sources":["webpack:///./src/storage/actions.js"],"names":["updateObjects","context","newObjectBlock","commit","question","cloneDeep","questionI10N","scaledSubquestions","scaledAnswerOptions","generalSettings","advancedSettings","questiongroup","loadQuestion","all","resolve","reject","subAction","window","QuestionEditData","connectorBaseUrl","slice","ajax","methods","$_get","qid","type","startType","then","result","data","i10n","subquestions","answerOptions","languages","mainLanguage","rejectAnswer","getQuestionGeneralSettings","state","currentQuestion","getQuestionAdvancedSettings","getQuestionTypes","reloadQuestion","saveQuestionData","inTransfer","transferObject","merge","currentQuestionSubquestions","currentQuestionAnswerOptions","currentQuestionI10N","currentQuestionGeneralSettings","currentQuestionAdvancedSettings","LS","csrfTokenData","LOG","log","$_post","saveAsLabelSet","payload","createUrl"],"mappings":"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","file":"main.f763ffb62bbc68f254d7.hot-update.js","sourcesContent":["import ajax from '../mixins/runAjax.js';\nimport cloneDeep from 'lodash/cloneDeep';\nimport merge from 'lodash/merge';\nimport {LOG} from '../mixins/logSystem.js'\n\nexport default {\n    updateObjects: (context, newObjectBlock) => {\n        context.commit('setCurrentQuestion', newObjectBlock.question);\n        context.commit('unsetQuestionImmutable');\n        context.commit('setQuestionImmutable', cloneDeep(newObjectBlock.question));\n\n        context.commit('setCurrentQuestionI10N', newObjectBlock.questionI10N);\n        context.commit('unsetQuestionImmutableI10N');\n        context.commit('setQuestionImmutableI10N', cloneDeep(newObjectBlock.questionI10N));\n\n        context.commit('setCurrentQuestionSubquestions', newObjectBlock.scaledSubquestions);\n        context.commit('unsetQuestionSubquestionsImmutable')\n        context.commit('setQuestionSubquestionsImmutable',  cloneDeep(newObjectBlock.scaledSubquestions));\n\n        context.commit('setCurrentQuestionAnswerOptions', newObjectBlock.scaledAnswerOptions);\n        context.commit('unsetQuestionAnswerOptionsImmutable')\n        context.commit('setQuestionAnswerOptionsImmutable', cloneDeep(newObjectBlock.scaledAnswerOptions))\n\n        context.commit('setCurrentQuestionGeneralSettings', newObjectBlock.generalSettings);\n        context.commit('unsetImmutableQuestionGeneralSettings');\n        context.commit('setImmutableQuestionGeneralSettings', cloneDeep(newObjectBlock.generalSettings));\n\n        context.commit('setCurrentQuestionAdvancedSettings', newObjectBlock.advancedSettings);\n        context.commit('unsetImmutableQuestionAdvancedSettings');\n        context.commit('setImmutableQuestionAdvancedSettings', cloneDeep(newObjectBlock.advancedSettings));\n\n        context.commit('setCurrentQuestionGroupInfo', newObjectBlock.questiongroup);\n    },\n    loadQuestion: (context) => {\n        return Promise.all([\n            (new Promise((resolve, reject) => {\n                const subAction = window.QuestionEditData.connectorBaseUrl.slice(-1) == '=' ? 'getQuestionData' : '/getQuestionData';\n                ajax.methods.$_get(\n                    window.QuestionEditData.connectorBaseUrl+subAction, \n                    {'iQuestionId' : window.QuestionEditData.qid, type: window.QuestionEditData.startType}\n                ).then((result) => {\n                    context.commit('setCurrentQuestion', result.data.question);\n                    context.commit('unsetQuestionImmutable');\n                    context.commit('setQuestionImmutable', cloneDeep(result.data.question));\n\n                    context.commit('setCurrentQuestionI10N', result.data.i10n);\n                    context.commit('unsetQuestionImmutableI10N');\n                    context.commit('setQuestionImmutableI10N', cloneDeep(result.data.i10n));\n                    \n                    context.commit('setCurrentQuestionSubquestions', result.data.subquestions);\n                    context.commit('unsetQuestionSubquestionsImmutable')\n                    context.commit('setQuestionSubquestionsImmutable',  cloneDeep(result.data.subquestions));\n\n                    context.commit('setCurrentQuestionAnswerOptions', result.data.answerOptions);\n                    context.commit('unsetQuestionAnswerOptionsImmutable')\n                    context.commit('setQuestionAnswerOptionsImmutable', cloneDeep(result.data.answerOptions))\n\n                    context.commit('setCurrentQuestionGroupInfo', result.data.questiongroup);\n                    context.commit('setLanguages', result.data.languages);\n                    context.commit('setActiveLanguage', result.data.mainLanguage);\n                    context.commit('setInTransfer', false);\n                    resolve(true);\n                },\n                (rejectAnswer) => {\n                    reject(rejectAnswer);\n                })\n            })),\n            (new Promise((resolve, reject) => {\n                const subAction = window.QuestionEditData.connectorBaseUrl.slice(-1) == '=' ? 'getQuestionPermissions' : '/getQuestionPermissions';\n                ajax.methods.$_get(\n                    window.QuestionEditData.connectorBaseUrl+subAction, \n                    {'iQuestionId' : window.QuestionEditData.qid }\n                ).then((result) => {\n                    context.commit('setCurrentQuestionPermissions', result.data);\n                    resolve(true);\n                },\n                (rejectAnswer) => {\n                    reject(rejectAnswer);\n                });\n            }))\n        ]);\n    },\n    getQuestionGeneralSettings: (context) => {\n        return new Promise((resolve, reject) => {\n            const subAction = window.QuestionEditData.connectorBaseUrl.slice(-1) == '=' ? 'getGeneralOptions' : '/getGeneralOptions';\n            ajax.methods.$_get(\n                window.QuestionEditData.connectorBaseUrl+subAction, \n                {\n                    'iQuestionId' : window.QuestionEditData.qid,\n                    'sQuestionType' : context.state.currentQuestion.type || window.QuestionEditData.startType\n                }\n            ).then((result) => {\n                context.commit('setCurrentQuestionGeneralSettings', result.data);\n                context.commit('unsetImmutableQuestionGeneralSettings', result.data);\n                context.commit('setImmutableQuestionGeneralSettings', result.data);\n                resolve(true);\n            },\n            (rejectAnswer) => {\n                reject(rejectAnswer);\n            });\n        });\n    },\n    getQuestionAdvancedSettings: (context) => {\n        return new Promise((resolve, reject) => {\n            const subAction = window.QuestionEditData.connectorBaseUrl.slice(-1) == '=' ? 'getAdvancedOptions' : '/getAdvancedOptions';\n\n            ajax.methods.$_get(\n                window.QuestionEditData.connectorBaseUrl+subAction, \n                {\n                    'iQuestionId' : window.QuestionEditData.qid,\n                    'sQuestionType' : context.state.currentQuestion.type || window.QuestionEditData.startType\n                }\n            ).then((result) => {\n                context.commit('setCurrentQuestionAdvancedSettings', result.data);\n                context.commit('unsetImmutableQuestionAdvancedSettings', result.data);\n                context.commit('setImmutableQuestionAdvancedSettings', result.data);\n                resolve(true);\n            },\n            (rejectAnswer) => {\n                reject(rejectAnswer);\n            });\n        });\n    },\n    getQuestionTypes: (context) => {\n        const subAction = window.QuestionEditData.connectorBaseUrl.slice(-1) == '=' ? 'getQuestionTypeList' : '/getQuestionTypeList';\n        ajax.methods.$_get(\n            window.QuestionEditData.connectorBaseUrl+subAction\n        ).then((result) => {\n            context.commit('setQuestionTypeList', result.data);\n        });\n    },\n    reloadQuestion: (context) => {\n        return new Promise((resolve,reject) => {\n            const subAction = window.QuestionEditData.connectorBaseUrl.slice(-1) == '=' ? 'getQuestionData' : '/getQuestionData';\n            ajax.methods.$_get(\n                window.QuestionEditData.connectorBaseUrl+subAction, \n                {\n                    'iQuestionId' : window.QuestionEditData.qid, \n                    type: context.state.currentQuestion.type || window.QuestionEditData.startType\n                }\n            ).then((result) => {\n                context.commit('updateCurrentQuestion', result.data.question);\n                context.commit('updateCurrentQuestionSubquestions', result.data.scaledSubquestions);\n                context.commit('updateCurrentQuestionAnswerOptions', result.data.scaledAnswerOptions);\n                context.commit('updateCurrentQuestionGeneralSettings', result.data.generalSettings);\n                context.commit('updateCurrentQuestionAdvancedSettings', result.data.advancedSettings);\n                context.commit('setCurrentQuestionGroupInfo', result.data.questiongroup);\n                resolve();\n            }, reject);\n        });\n    },\n    saveQuestionData: (context) => {\n        if(context.state.inTransfer) {\n            return Promise.resolve(false);\n        }\n\n        let transferObject = merge({\n            'questionData': {\n            question: context.state.currentQuestion,\n            scaledSubquestions: context.state.currentQuestionSubquestions,\n            scaledAnswerOptions: context.state.currentQuestionAnswerOptions,\n            questionI10N: context.state.currentQuestionI10N,\n            generalSettings: context.state.currentQuestionGeneralSettings,\n            advancedSettings: context.state.currentQuestionAdvancedSettings,\n        }}, window.LS.data.csrfTokenData);\n\n        LOG.log('OBJECT TO BE TRANSFERRED: ', {'questionData': transferObject});\n        return new Promise((resolve, reject) => {\n            const subAction = window.QuestionEditData.connectorBaseUrl.slice(-1) == '=' ? 'saveQuestionData' : '/saveQuestionData';\n            context.commit('setInTransfer', true);\n            ajax.methods.$_post(window.QuestionEditData.connectorBaseUrl+subAction, transferObject)\n                .then(\n                    (result) => {\n                        context.commit('setInTransfer', false);\n                        resolve(result);\n                    },\n                    reject\n                )\n        });\n    },\n    saveAsLabelSet: (context, payload) => {\n        let transferObject = merge({'labelSet': payload}, window.LS.data.csrfTokenData);\n        LOG.log('OBJECT TO BE TRANSFERRED: ', {'transferData ': transferObject});\n        return new Promise((resolve, reject) => {\n            ajax.methods.$_post(LS.createUrl('admin/labels/sa/newLabelSetFromQuestionEditor'), transferObject)\n            .then(\n                (result) => resolve(result),\n                reject\n            );\n        });\n    }\n};"],"sourceRoot":""}