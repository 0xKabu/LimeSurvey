{"version":3,"sources":["webpack:///src/helperComponents/Autocomplete.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AACA;AACA;AACA,wBADA;AAEA;AACA;AAAA;AAAA;AAAA,KADA;AAEA;AAAA;AAAA;AAAA,KAFA;AAGA;AAAA;AAAA;AAAA,KAHA;AAIA;AAAA;AAAA;AAAA,KAJA;AAKA;AAAA;AAAA;AAAA,KALA;AAMA;AAAA;AAAA;AAAA,KANA;AAOA;AAAA;AAAA;AAAA,KAPA;AAQA;AAAA;AAAA;AARA,GAFA;AAYA,MAZA,kBAYA;AACA;AACA,eADA;AAEA;AAFA;AAIA,GAjBA;AAkBA;AACA,gBADA,0BACA;AACA;AACA,KAHA;AAIA,gBAJA,0BAIA;AAAA;;AACA;AACA;AACA;AAAA;AAAA;;AACA;AACA,SAHA,EAGA,KAHA;AAIA,OALA;AAMA,KAXA;AAYA,sBAZA,gCAYA;AACA;AACA;AAdA,GAlBA;AAkCA;AACA,gBADA,wBACA,IADA,EACA;AACA;AACA;AACA;AACA;AACA,KANA;AAOA,SAPA,iBAOA,UAPA,EAOA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AAZA;AAcA,KAxBA;AAyBA,UAzBA,kBAyBA,UAzBA,EAyBA;AACA;AACA;AACA,KA5BA;AA6BA,UA7BA,kBA6BA,UA7BA,EA6BA;AACA;AACA;AACA,KAhCA;AAiCA,UAjCA,kBAiCA,UAjCA,EAiCA;AACA;AACA;AACA,KApCA;AAqCA,QArCA,gBAqCA,UArCA,EAqCA;AACA;AACA;AAvCA,GAlCA;AA2EA,SA3EA,qBA2EA;AACA;AACA;AACA;AACA;AA/EA,G","file":"main.085b94669d14ac5371ee.hot-update.js","sourcesContent":["<script>\r\nimport filter from 'lodash/filter'\r\nexport default {\r\n    name: 'lsautocomplete',\r\n    props: {\r\n        dataList: {type: Array, required: true},\r\n        searchableKeys: {type: Array, default: ['name','title']},\r\n        showKey: {type: String, default: 'name'},\r\n        valueKey: {type: String|Boolean, default: false},\r\n        matchType: {type: String, default: 'fuzzy'},\r\n        itemClass: {type: String, default: ''},\r\n        inputClass:  {type: String, default: ''},\r\n        value: {default: null}\r\n    },\r\n    data(){\r\n        return {\r\n            input: '',\r\n            forceClosed: false,\r\n        }\r\n    },\r\n    computed: {\r\n        showDropdown() {\r\n            return this.input != '';\r\n        },\r\n        filteredList() {\r\n            return filter(this.dataList, (listItem) => {\r\n                return this.searchableKeys.reduce((coll, key) => {\r\n                    if(listItem[key] == undefined) { return coll; }\r\n                    return (coll || this.match(listItem[key]));\r\n                }, false);\r\n            });\r\n        },\r\n        currentItemsHeight() {\r\n            (this.filteredList.length*28)+'px';\r\n        }\r\n    },\r\n    methods: {\r\n        itemSelected(item) {\r\n            const result = this.valueKey===false ? item : item[this.valueKey];\r\n            this.input = item[this.showKey];\r\n            this.$emit('input', result);\r\n            this.forceClosed=true;\r\n        },\r\n        match(comparable) {\r\n            this.$log.log(`Matching ${comparable} to ${this.input} with ${this.matchType}-Method`);\r\n            let result = true;\r\n            switch(this.matchType) {\r\n                case 'fuzzy': \r\n                    result = this._fuzzy(comparable);\r\n                    this.$log.log(`Result: ${result}`);\r\n                    return result;\r\n                case 'exact': \r\n                    result = this._exact(comparable);\r\n                    this.$log.log(`Result: ${result}`);\r\n                    return result;\r\n                case 'start': \r\n                    result = this._start(comparable);\r\n                    this.$log.log(`Result: ${result}`);\r\n                    return result;\r\n            }\r\n        },\r\n        _fuzzy(comparable) {\r\n            const regExp = new RegExp(\".*\"+this.input+\".*\");\r\n            return regExp.test(comparable);\r\n        },\r\n        _exact(comparable) {\r\n            const regExp = new RegExp(this.input);\r\n            return regExp.test(comparable);\r\n        },\r\n        _start(comparable) {\r\n            const regExp = new RegExp(this.input+\".*\");\r\n            return regExp.test(comparable);\r\n        },\r\n        lazy(comparable) {\r\n            return (comparable.toLowerCase().indexOf(this.input.toLowerCase()) > -1);\r\n        },\r\n    },\r\n    mounted() {\r\n        if(this.value != '') {\r\n            this.input = this.value;\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<template>\r\n    <div class=\"scoped-autocomplete-input-container\" :class=\"itemClass\">\r\n        <input type=\"text\" class=\"form-control\" :class=\"inputClass\" v-model=\"input\" @keyup=\"forceClosed=false\"/>\r\n        <ul class=\"scoped-autocomplete-list\" v-show=\"showDropdown && !forceClosed\" :style=\"{height: currentItemsHeight}\">\r\n            <li \r\n                v-for=\"(item,i) in filteredList\" \r\n                :key=\"'autocomplete-'+i\"\r\n                @click=\"itemSelected(item)\"\r\n                class=\"scoped-autocomplete-list-item\"\r\n            >\r\n                {{item[showKey]}}\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</template>\r\n\r\n<style lang=\"scss\" scoped>\r\n    .scoped-autocomplete-input-container {\r\n        position: relative\r\n    }\r\n    .scoped-autocomplete-list {\r\n        position: absolute;\r\n        top: 36px;\r\n        left:0;\r\n        width: 90%;\r\n        padding:0;\r\n        margin: 4px 5%;\r\n        overflow: auto;\r\n        border: 1px solid #212121;\r\n        background-color: #fff;\r\n        list-style: none;\r\n    }\r\n    .scoped-autocomplete-list-item {\r\n        &:hover { background-color: #dedede; }\r\n        padding: 4px 6px;\r\n        border-bottom: 1px solid #929292;\r\n        &:last-of-type {\r\n            border-bottom: none;\r\n        }\r\n    }\r\n</style>\r\n"],"sourceRoot":""}